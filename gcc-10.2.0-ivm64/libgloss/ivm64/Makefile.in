#
#

DESTDIR =
VPATH = @srcdir@ @srcdir@/..
srcdir = @srcdir@
objdir = .
srcroot = $(srcdir)/../..
objroot = $(objdir)/../..

prefix = @prefix@
exec_prefix = @exec_prefix@

host_alias = @host_alias@
target_alias = @target_alias@

bindir = @bindir@
libdir = @libdir@
tooldir = $(exec_prefix)/$(target_alias)

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

# Multilib support variables.
# TOP is used instead of MULTI{BUILD,SRC}TOP.
MULTIDIRS =
MULTISUBDIR =

SHELL =	/bin/sh

CC = @CC@

AS = @AS@
AR = @AR@
LD = @LD@
RANLIB = @RANLIB@

OBJDUMP = `if [ -f ${objroot}/../binutils/objdump ] ; \
	then echo ${objroot}/../binutils/objdump ; \
	else t='$(program_transform_name)'; echo objdump | sed -e $$t ; fi`
OBJCOPY = `if [ -f ${objroot}/../binutils/objcopy ] ; \
	then echo ${objroot}/../binutils/objcopy ; \
	else t='$(program_transform_name)'; echo objcopy | sed -e $$t ; fi`

# object files needed
COMMON_FILES = chown close execve _exit fork fstat getpid gettod isatty kill link lseek open posix printk read readlink sbrk stat symlink times unlink wait write


LIBIVM64_FILES = $(COMMON_FILES)
LIBIVM64_OBJS = $(addsuffix .o,$(LIBIVM64_FILES))

GCC_LDFLAGS = `if [ -d ${objroot}/../gcc ] ; \
	then echo -L${objroot}/../gcc ; fi`

OUTPUTS = libivm64sys.a crt0.o

# Host specific makefile fragment comes in here.
@host_makefile_frag@


all: ${OUTPUTS}

#
# here's where we build the library for each target
#

libivm64sys.a: $(LIBIVM64_OBJS)
	${AR} ${ARFLAGS} $@ $(LIBIVM64_OBJS)
	${RANLIB} $@

.c.S:
	${CC} ${CFLAGS_FOR_TARGET} -c $<

crt0.o: crt0.S

doc:

clean mostlyclean:
	rm -f $(OUTPUTS) *.i *~ *.o

distclean maintainer-clean realclean: clean
	rm -f Makefile config.status *~

.PHONY: install

install:
	@for outputs in ${OUTPUTS}; do\
	 mkdir -p $(DESTDIR)$(tooldir)/lib; \
	 $(INSTALL_DATA) $${outputs} $(DESTDIR)$(tooldir)/lib; \
	done
#	$(INSTALL_DATA) ${srcdir}/include/or1k-support.h $(DESTDIR)$(tooldir)/include/
#	$(INSTALL_DATA) ${srcdir}/include/or1k-sprs.h $(DESTDIR)$(tooldir)/include/
#	$(INSTALL_DATA) ${srcdir}/include/or1k-asm.h $(DESTDIR)$(tooldir)/include/
#	$(INSTALL_DATA) ${srcdir}/include/or1k-nop.h $(DESTDIR)$(tooldir)/include/

Makefile: Makefile.in config.status @host_makefile_frag_path@
	$(SHELL) config.status

config.status: configure
	$(SHELL) config.status --recheck













